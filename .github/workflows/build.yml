name: Build Multi-Platform

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-latest
            os: Windows
            arch: x64
          - platform: ubuntu-22.04
            os: Linux
            arch: x64

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # Windows 特定依赖
      - name: Install Windows bundlers (NSIS + WiX)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          choco install nsis -y
          choco install wixtoolset -y

      # Linux 特定依赖
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            build-essential \
            curl \
            wget \
            file \
            patchelf \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Tauri CLI
        run: npm i -D @tauri-apps/cli@^2

      - name: Install frontend dependencies
        run: npm ci

      - name: Generate icons from flymd.png
        run: npx tauri icon ./flymd.png

      - name: Build Tauri app
        run: npm run tauri:build

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: flymd-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: error

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: flymd-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/appimage/*.AppImage
          if-no-files-found: warn

  # 可选：创建 Release
  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            flymd-Windows-x64/**/*
            flymd-Linux-x64/**/*
          draft: true
          generate_release_notes: true
